
Backlog: Game Development Project

Current Issues and Tasks:

Investigate the relationship between ballSpeed and ballXDirection angle.
Address ball's direction update while in motion (requires fixing).
Synchronize scores between players (move Score logic to backend).
Ensure information consistency between clients; noticeable delay during exchange.
Code Snippets of Interest:

index.ts: Emit goalScored event with playerId.
app.gateway: Listen for goalScored event and update score using pongData.updateScore(playerId).
app.gateway: Emit updatePongData event.

-----------------------------------------------------------------------------------------------

Changelog - 18th August:

Implement isReady logic to start the game only when two players are ready.
Relocate certain 'gameLoop' logic to backend for coherence.
Revive checks for playerA and playerB in pongSession.ts.
Fix countdownGameReady issue.
Ensure accurate display for both clients.
Start countdown when both players press 'START GAME'.
Utilize synchronized 'server time' for consistent countdown.
Resolve setRandomVelocity issues.
Randomize ball direction setter.
Add angle thresholds to avoid specific directions.
Ensure randomized vectorization between player1 and player2.
Reset pongData.ball.position on clients via setRandomVelocity.
Rearrange ball logic in backend.
Dispatch ballData to clients for display.
Synchronize ball movement and drawing accurately.
Implement socket handlers for linking score between frontend and backend.
Notify backend and reset both players' balls on goal scored.
Fix updatePongData inconsistencies.
Eliminate unwanted redraws from updatePlayerPosition().
Ensure accurate and synchronized vector updates.
Miscellaneous changes.
Refine gameData for improved online gameplay (e.g., ballSpeed, paddleSpeed).
Clean up 'proto' functions in frontend and backend.
Remove unclear and unnecessary comments.

-----------------------------------------------------------------------------------------------

Changelog - 19th August:

Enhance security for pongData access.
Fix 'undefined reading' issues during isReady checks.
Initialize pongData properly.
Clean up data on leaveRoom.
Address rendering and display bugs.
Prevent automatic ball generation on welcomeScreen.
Set initial ball position correctly.
Draw ball only upon game start.
Resolve stuttering during repeated movePaddle() and setPlayerPosition().
Revamp score system.
Move score handling logic to backend.
Update score and send updates to clients on goal scored.
Secure score checks, potentially with a safe score setter in pongSession.
Dynamic countdown display.
Display backend-generated countdown simultaneously on clients.
Utilize Konva.gameLayer for seamless integration.
Introduce debug functions for better game logic tracking (Quality of Life).

---------------------------------------------------------------------------------------------

Outstanding Issues to Address:

Fix score limit functionality (index.ts).
Investigate possible score duplication (scores incrementing too quickly).
Address ball direction changes due to user inputs (potential socket signal conflicts).
Implement isPaused to pause the game when a user quits and resume on their return.